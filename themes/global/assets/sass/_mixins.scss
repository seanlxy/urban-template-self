@mixin rounded-borders($radius){

    -webkit-border-radius:$radius;
    border-radius:$radius;
    
}
@mixin box-shadow($x, $y, $blur, $spread, $color){
    -moz-box-shadow:$x $y $blur $spread $color;
    -webkit-box-shadow:$x $y $blur $spread $color;
    box-shadow:$x $y $blur $spread $color;
}
@mixin transitions($prop,$speed,$easing){
    
    -webkit-transition: $prop $speed $easing;
    -moz-transition: $prop $speed $easing;
    -ms-transition: $prop $speed $easing;
    -o-transition: $prop $speed $easing;
    transition: $prop $speed $easing;

}

@mixin gradient-bg($start-color, $end-color){
    background: $start-color;
    background: -moz-linear-gradient(top,  $start-color 0%, $end-color 100%);
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start-color), color-stop(100%,$end-color));
    background: -webkit-linear-gradient(top,  $start-color 0%,$end-color 100%);
    background: -o-linear-gradient(top,  $start-color 0%,$end-color 100%);
    background: -ms-linear-gradient(top,  $start-color 0%,$end-color 100%);
    background: linear-gradient(to bottom,  $start-color 0%,$end-color 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start-color}', endColorstr='#{$end-color}',GradientType=0 );
}

@mixin disable-selection(){
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@mixin opacity($val:1){
    $ie-val: $val*100;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$ie-val})";
    filter: alpha(opacity=#{$ie-val});
    -moz-opacity:$val;
    -khtml-opacity:$val;
    opacity:$val;
}


@mixin rotate($deg){
    -webkit-transform: rotate(#{$deg}deg);
    -moz-transform: rotate(#{$deg}deg);
    -ms-transform: rotate(#{$deg}deg);
    -o-transform: rotate(#{$deg}deg);
    filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
}

@mixin if-min($min) {
    @media only screen and (min-width: $min) {
        @content;
    }
}

@mixin if-max($max) {
    @media only screen and (max-width: $max) {
        @content;
    }
}

@mixin if-min-max($min, $max) {
    @media only screen and (min-width: $min) and (max-width: $max) {
        @content;
    }
}

@mixin if-landscape {
    @media only screen and (orientation: landscape) {
        @content;
    }
}

@mixin if-portrait {
    @media only screen and (orientation: portrait) {
        @content;
    }
}

// Either support desktop-first or mobile-first responsive pattern
@mixin do-responsive($desktop, $mobile) {
    @if $responsive-design == "desktop" {
        @if $desktop {
            @include if-max($desktop) {
                @content;
            }
        } @else {
            @content;
        }
    } @else {
        @if $mobile {
            @include if-min($mobile) {
                @content;
            }
        } @else {
            @content;
        }
    }
}

//-------------------- Breakpoints --------------------//

// Uses min or max
@mixin if-desktop {
    @include do-responsive(null, $breakpoint-tablet-landscape) {
        @content;
    }
}

@mixin if-tablet-landscape {
    @include do-responsive($breakpoint-tablet-landscape, $breakpoint-tablet-portrait) {
        @content;
    }
}

@mixin if-tablet-portrait {
    @include do-responsive($breakpoint-tablet-portrait, $breakpoint-mobile-landscape) {
        @content;
    }
}

@mixin if-mobile-landscape {
    @include do-responsive($breakpoint-mobile-landscape, $breakpoint-mobile-portrait) {
        @content;
    }
}

@mixin if-mobile-portrait {
    @include do-responsive($breakpoint-mobile-portrait, null) {
        @content;
    }
}

// Within 2 ranges
@mixin in-desktop {
    @include if-min($breakpoint-tablet-landscape + 1) {
        @content;
    }
}

@mixin in-tablet {
    @include if-min-max($breakpoint-mobile-landscape + 1, $breakpoint-tablet-landscape) {
        @content;
    }
}

@mixin in-mobile {
    @include if-max($breakpoint-mobile-landscape) {
        @content;
    }
}

@function graphics-path($url) {
    @return url($graphics-dir-path + $url);
}